version: '3.9'
services:
  alert_manager:
       image: prom/alertmanager:v0.27.0
       container_name: booking-alertmanager
       command:
        - '--config.file=/etc/alertmanager/alertmanager.yml'
        - '--storage.path=/alertmanager'
       volumes:
        - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
       ports:
        - "9093:9093"
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: booking-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    depends_on:
      - app
    networks:
      - default

  grafana:
      image: grafana/grafana:11.1.3
      container_name: booking-grafana
      environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=1234
        - GF_USERS_DEFAULT_THEME=light
      volumes:
        - grafana-data:/var/lib/grafana
        - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
        - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
        - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      ports:
        - "3000:3000"
      depends_on:
        - prometheus
      networks:
        - default

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: booking
      MYSQL_USER: booking
      MYSQL_PASSWORD: booking
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: jsJRg6qLq1aBfRvnxTu25G9hnRFIpEzi9G++AdqSfug=
      SPRING_CACHE_TYPE: none
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/booking?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: booking
      SPRING_DATASOURCE_PASSWORD: booking
      SPRING_DATA_REDIS_HOST: redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy


volumes:
  prometheus-data:
  grafana-data: